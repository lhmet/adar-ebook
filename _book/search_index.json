[
["install.html", "2 Instalação do R e RStudio", " 2 Instalação do R e RStudio A interação do usuário com o é por meio da linha de comando. Essa interação pode ser facilitada com o uso do software RStudio Desktop. A seguir descreve-se como: instalar o no Windows e no Linux Ubuntu manter o sempre atualizado no Linux Ubuntu configurar um diretório para armazenar os pacotes do R instalados instalar o Rstudio Desktop Neste livro, o maior foco na instalação do é dada para o SO Linux Ubuntu, pelo fato de assim como o R, ser um software livre e de código aberto. Como o Linux Ubuntu é baseado no Debian o procedimento de instalação também se estende a essa distribuição Linux e as versões derivadas do Ubuntu que são oficialmente reconhecidas. A instalação no SO Windows é igual a instalação de qualquer outro software e pode ser facilmente encontrada na internet. Por esta razão, somente indicou-se o caminho de instalação, sem as instruções detalhadas de instalação para este SO. Ao instalar R e RStudio recomenda-se optar por instalar na língua inglesa. Assim quando surgir uma mensagem de erro durante o uso do software, basta usá-la numa pesquisa na internet para solucionar o problema. As chances de resolver o problema serão muito maiores se sua pesquisa for realizada em inglês. "],
["instalando-o.html", "2.1 Instalando o ", " 2.1 Instalando o O pode ser instalado a partir dos binários pré-compilados ou do código fonte. Aqui, descreve-se a instalação do a partir dos arquivos binários. 2.1.1 Windows A forma de instalar o no Windows é baixar o binário executável da Rede Abrangente de Arquivos do (CRAN). Depois clicar em Download for Windows e install for the first time. Quando este tutorial foi escrito a última versão foi a R 3.4.4. A instalação do para o Windows, a partir do executável acima, incluirá na instalação uma Interface Gráfica do Usuário (GUI) acessível pelo executável RGui.exe (Figura 2.1). Um atalho para esse executável é gerado por default após a intalação do , na área de trabalho com o símbolo do . Figure 2.1: Interface gráfica do usuário no R para Windows. Novas versões do R são disponibilizadas em geral com frequência de 5 vezes por ano. Recomenda-se manter o R atualizado pois as novas versões incluem aperfeiçoamentos e a correção de bugs. As novas versões do vem com os pacotes padrões do R. Os demais pacotes instalados pelo usuário na versão anterior precisam ser reinstalados na nova versão do . Para atualizar o R no Windows, ao invés de baixar o executável da nova versão, você pode utilizar o pacote installr. A instalação de pacotes no será vista na seção 2.2. 2.1.2 Linux 2.1.2.1 Ubuntu Há várias formas de instalar o no Ubuntu, mas geralmente a versão compilada no repositório default do Ubuntu não é a última. Se isso não for problema para você então basta executar: sudo apt-get install r-base Entretanto, os pacotes do recém lançados são compilados para última versão do . Então você pode ter restrições ao uso de pacotes novos, os quais geralmente incluem o estado da arte de análise de dados. Por esta razão, abaixo mostra-se como manter o R sempre atualizado no SO Linux, nas distribuições Ubuntu. 2.1.2.2 R sempre atualizado Se você quer trabalhar sempre com a última versão estável do , é possível configurar o Linux Ubuntu para atualizar automaticamente o . O procedimento de instalação requer senha de superusuário do sistema ou de privilégios sudo. Caso não tenha, consulte o administrador do sistema. Ao utilizar distribuições Linux Ubuntu é importante optar por versões estáveis1. As versões de Suporte de longo prazo (LTS) mais recentes são: 14.04 (abril de 2014, codename trusty) 16.04 (abril de 2016, codename xenial) O R é distribuído na CRAN. Geralmente há duas atualizações ao ano. A versão mais atual é a R version 3.4.4 (2018-03-15). Para que ele seja atualizado automaticamente no Ubuntu precisamos adicionar o repósitório do R mais próximo da nossa região à lista de repositórios do Linux. No nosso caso, o repositório mais próximo é o da UFPR (http://cran-r.c3sl.ufpr.br/). 2.1.2.2.1 Incluindo repositório do na Lista de repositórios do Ubuntu A lista de repositórios do sistema é armazenada no arquivo /etc/apt/sources.list. Mas primeiro, você precisa descobrir ou verificar o nome da versão do sistema operacional. Para isso, você pode utilizar o seguinte comando2 : $ lsb_release --codename | cut -f2 trusty Precisamos incluir no arquivo sources.list o espelho do repositório do R mais próximo. Veja a lista de espelhos de repositórios do aqui. Assim o gerenciador de pacotes apt3 fará a atualização do quando uma nova versão estiver disponível. Ou seja, você estará utilizando sempre versão mais atual do . O endereço do repositório da UFPR será inserido na última linha do arquivo sources.list usando alguns comandos linux. Essa tarefa requer privilégios de superusuário. Vamos trocar do seu usuário para o superusuário. $ sudo su Vamos definir no terminal uma variável com o endereço do repositório (da UFPR nesse caso) e o nome de versão do Ubuntu. # repos=&quot;deb http://cran-r.c3sl.ufpr.br/bin/linux/ubuntu `lsb_release --codename | cut -f2`/&quot; Note que a variável repos é uma sequência de caracteres com as seguintes informações: deb `linkRepositorioSelecionado`/bin/linux/ubuntu `versaoUbuntu`/ O valor da variável repos é mostrado pelo comando: echo $repos. Certifique-se de que a última palavra corresponde ao nome da sua versão Ubuntu. Para acrescentar essa informação no final do arquivo sources.list digite no terminal linux: # echo $repos &gt;&gt; /etc/apt/sources.list Feito isso, você pode retornar a sessão de usuário comum, usando o comando abaixo: # exit 2.1.2.2.2 APT protegido Os arquivos binários do para Ubuntu na CRAN são assinados com uma chave pública4 Para adicionar essa chave ao seu sistema digite os seguintes comandos: $ gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E084DAB9 e então use essa informação como entrada no apt-key com $ gpg -a --export E084DAB9 | sudo apt-key add - Se aparecer a mensagem de que a chave pública foi importada, então não há necessidade de executar os comandos abaixo. Mas caso seja impresso alguma mensagem de erro, outra alternativa pode ser usada para obter a chave, via os comandos: $ gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 $ gpg -a --export E084DAB9 | sudo apt-key add - 2.1.2.2.3 Atualização da lista de repositórios do Ubuntu e instalação do Após fazer as configurações da lista de repositórios e adicionar a chave é necessário fazer a atualização dessa lista (requer poderes de super usuário): $ sudo apt-get update Agora, pode instalar o binário do R: $ sudo apt-get install r-base 2.1.2.2.4 Testando o Para iniciar o no Ubuntu, digite R no cursor do terminal: $ R A partir desse momento já começamos uma sessão no . Vamos gerar uma sequência numérica de 1 a 10 e plotá-la. &gt; 1:10 [1] 1 2 3 4 5 6 7 8 9 10 &gt; plot(1:10) Figure 2.2: Gráfico da sequência de 10 números. Você pode sair do , sem salvar os dados da seção, com o código a seguir: &gt; q(save = &quot;no&quot;) 2.1.2.3 Diretório para instalação de pacotes Uma boa prática é definir um diretório para armazenamento dos pacotes utilizados. Isso lhe dá mais controle sobre os pacotes do instalados no sistema. Um local sugerido é o /home/usuario/.R/libs. O seu home ou pasta pessoal pode ser obtido com o comando echo $HOME. Para criar o diretório você pode digitar o comando abaixo: $ mkdir -p `echo $HOME`/.R/libs/ Para informar ao onde procurar os pacotes instalados, você precisa criar um arquivo chamado .Renviron, no diretório $HOME, contendo a expressão R_LIBS=/home/usuario/.R/libs/. Você pode fazer isso em um terminal com os comandos: $ R_LIBS=`echo $HOME/.R/libs/` $ echo $R_LIBS &gt;&gt; `echo $HOME/.Renviron` Esse caminho fica então visível ao , o que pode ser verificado executando a função .libPaths() na linha de comando do . Abra o : $ R e ao digitar: &gt; .libPaths() [1] &quot;/home/pqgfapergs1/.R/libs&quot; &quot;/usr/local/lib/R/site-library&quot; [3] &quot;/usr/lib/R/site-library&quot; &quot;/usr/lib/R/library&quot; o seu diretório /home/usuario/.R/libs5 deve aparecer em primeiro lugar. Indicando que este local tem prioridade para instalação dos pacotes. Caso o diretório deixe de existir os seguintes diretórios serão usados. Clique aqui para saber mais sobre as versões do Ubuntu.↩ Se o comando lsb_release não funcionar você precisa instalar o pacote lsb-release no sistema. Para isso, digite no terminal Linux sudo apt-get install lsb-release.↩ o gerenciador de pacotes apt é usado para instalação, atualização e remoção de pacotes em distribuições Debian GNU/Linux.↩ Chave pública de autenticação é um meio alternativo de se logar em um servidor ao invés de digitar uma senha. É uma forma mais segura e flexível, mas mais difícil de ser configurada. Esse meio alternativo de fazer login é importante se o computador está visível na internet. Para saber mais veja aqui.↩ Diretórios precedidos por “.” no Linux são diretórios ocultos. O diretório /home/usuario/.R é um diretório oculto, para visualizá-lo no Ubuntu, na interface gráfica do sistema, acesse View &gt; Show Hidden Files (ou Visualizar &gt; Mostrar arquivos ocultos). No terminal utilize ls -a para listar os arquivos ocultos.↩ "],
["install-pck.html", "2.2 Pacotes do R", " 2.2 Pacotes do R 2.2.1 Da internet 2.2.1.1 CRAN A forma mais fácil de instalar uma pacote do R é através da função install.packages(&quot;nome_do_pacote&quot;). Por default o pacote informado é instalado a partir da (CRAN) Por exemplo, para instalar o pacote devtools: install.packages(&quot;devtools&quot;) A função automaticamente resolverá as dependências do pacote, de forma que qualquer pacote dependente também será instalado. Para ter acesso as funções disponibilizadas com o pacote você precisa carregar o pacote: library(devtools) Para desinstalar um pacote você pode usar a função remove.packages(&quot;nome_do_pacote&quot;). 2.2.1.2 GitHub e R-forge Nem todos pacotes são disponíveis na CRAN. Muitos desenvolvedores disponibilizam seus pacotes em plataormas como o GitHub e R-forge. As vezes um pacote pode estar em ambos CRAN e GitHub (ou R-forge), mas a última versão - a de desenvolvimento - é somente disponibilizada no GitHub (ou R-forge). Para instalar um pacote de um repositório do GitHub usa-se a função install_github() do pacote devtools. Portanto, o pacote devtools precisa ser instalado primeiro. Antes de instalar o pacote devtools, usuários Windows precisam instalar o programa Rtools. A função install package from GitHub, the name for the repo must be specified. For example, to install the package ArgParser from the book author’s repo: # install.packages(&quot;devtools&quot;) # carrega o pacote devtools library(devtools) # instala o pacote inmetr do repositório # https://github.com/lhmet/inmetr install_github(&quot;lhmet/inmetr&quot;) Para um repositório do R-forge, por exemplo o repositório do pacote raster, usa-se: install.packages(&quot;raster&quot;, repos=&quot;http://R-Forge.R-project.org&quot;) 2.2.1.3 Arquivo fonte local Códigos fonte de pacotes do R são armazenados como arquivos com a extensão .tar.gz. Binários compilados são armazenados com a extensão .zip. Exemplo de arquivos como estes podem ser baixados manualmente da CRAN (veja a seção Downloads em https://cran.r-project.org/web/packages/ggplot2/index.html), GitHub ou R-forge. Eventualmente um usuário pode instalar um pacote a partir desses arquivos localmente. Isto pode também ser feito com a função install.packages(), especifincando o argumento repos = NULL e o argumento pkgs com o caminho do arquivo. Por exemplo: install.packages(&quot;ggplot2_2.1.0.tar.gz&quot;, repos=NULL) "],
["install-rstudio.html", "2.3 RStudio no Ubuntu", " 2.3 RStudio no Ubuntu é uma empresa que desenvolve ferramentas gratuitas para o e produtos pagos para empresas. Uma de suas ferramentas gratuitas é o software RStudio Desktop que consiste em um ambiente integrado de desenvolvimento (IDE) construído especificamente para o , consequentemente, também é multiplataforma. Para instalação da versão do RStudio para Desktop, você precisa saber se seu SO é 64 ou 32-bit e a versão do Linux Ubuntu. Essas informações podem ser obtidas, respectivamente, pelos comandos: $ arch x86_64 Se retornar x86_64 sua máquina é 64-bit. $ lsb_release --release | cut -f2 14.04 Com essas informações, siga os seguintes passos: acesse RStudio clique em Download (Figura 2.3) Figure 2.3: Opção para baixar o RStudio Desktop. Clique na sua plataforma (de acordo com seu SO, arquitetura e versão da distribuição) (Figura 2.4), no exemplo deste livro RStudio 1.1.447 - Ubuntu 12.04-15.10/Debian 8 (64-bit) Figure 2.4: Escolha da plataforma em que será o usada o RStudio Desktop. Dependendo da sua versão Ubuntu, ao clicar sobre o sobre o arquivo baixado com o botão direito, há a opção de abrir com Ubuntu Software Center e então clicar em instalar. Se na versão de seu Desktop não há esta opção ao clicar com botão direito sobre o arquivo, instale via terminal6 com os seguintes comandos: $ cd /local/do/arquivo/baixado $ sudo dpkg -i arquivoBaixado.deb $ sudo apt-get install -f Abra o RStudio digitando no terminal: $ rstudio &amp; Agora você está pronto para começar a programar em aproveitando as facilidades que o RStudio oferece. --> digite ‘Ctrl+Alt+t’ para abrir um terminal no Linux Ubuntu↩ "]
]
