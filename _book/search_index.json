[
["operbasic.html", "5 Operações básicas", " 5 Operações básicas Nesta seção veremos: operações aritméticas básicas com R a atribuição de valores a uma variável o uso de funções matemáticas internas do R valores numéricos especiais do R os cuidados ao nomear variáveis "],
["convencao.html", "5.1 Convenção", " 5.1 Convenção A partir deste capítulo, os códigos a serem avaliadas no R terão o prompt do R (&gt;) omitidos. Essa convenção é para tornar mais fácil a ação de copiar e colar os códigos na linha de comando do R. O resultado da avaliação das expressões será mostrado precedido do símbolo (#&gt;). Esses valores são os resultados que esperam-se sejam reproduzidos pelo leitor na sessão do R em seu computador. Por exemplo: 1:5 #&gt; [1] 1 2 3 4 5 No trecho de código acima, a primeira linha contém o código a ser copiado pelo leitor para execução em seu computador. A segunda linha é a saída do código avaliado pelo R. "],
["calculadora.html", "5.2 Calculadora", " 5.2 Calculadora O R é uma calculadora turbinada com diversas funções matemáticas disponíveis. Para quem não conhece o R, essa uma forma de familiarizar-se com a linha de comandos do R. 5.2.1 Aritmética básica Todas operações feitas em uma calculadora podem ser realizadas na linha de comandos do R. 10 + 2 + 4 #&gt; [1] 16 # Exemplo de divisao (5 + 14)/2 #&gt; [1] 9.5 # exponenciação 2^3 #&gt; [1] 8 4^0.5 #&gt; [1] 2 # operador artimético para se determinar o resto de uma divisao 10 %% 2 #&gt; [1] 0 2001 %% 2 #&gt; [1] 1 # o inteiro do quociente 11 %/% 2 #&gt; [1] 5 Note que no R, o separador decimal é o ponto “.”, ao invés da vírgula “,” usada na notação brasileira. As vírgulas tem a finalidade de separar os argumentos nas chamadas de funções, tal como em log(x = 10, base = 10). Conheça mais operadores aritméticos, digitando na linha de comando: ?&quot;Arithmetic&quot; A janela que se abrirá mostrará o texto que faz parte do manual de ajuda do R. 5.2.2 Constantes O R possui algumas constantes pré-definidas, como o a constante pi (\\(\\pi\\)). pi #&gt; [1] 3.141593 O R também tem vetores de caracteres pré-definidos, são eles: LETTERS #&gt; [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot; &quot;H&quot; &quot;I&quot; &quot;J&quot; &quot;K&quot; &quot;L&quot; &quot;M&quot; &quot;N&quot; &quot;O&quot; &quot;P&quot; &quot;Q&quot; #&gt; [18] &quot;R&quot; &quot;S&quot; &quot;T&quot; &quot;U&quot; &quot;V&quot; &quot;W&quot; &quot;X&quot; &quot;Y&quot; &quot;Z&quot; letters #&gt; [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot; &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; #&gt; [18] &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot; month.abb #&gt; [1] &quot;Jan&quot; &quot;Feb&quot; &quot;Mar&quot; &quot;Apr&quot; &quot;May&quot; &quot;Jun&quot; &quot;Jul&quot; &quot;Aug&quot; &quot;Sep&quot; &quot;Oct&quot; &quot;Nov&quot; #&gt; [12] &quot;Dec&quot; month.name #&gt; [1] &quot;January&quot; &quot;February&quot; &quot;March&quot; &quot;April&quot; &quot;May&quot; #&gt; [6] &quot;June&quot; &quot;July&quot; &quot;August&quot; &quot;September&quot; &quot;October&quot; #&gt; [11] &quot;November&quot; &quot;December&quot; Note que caracteres estão sempre entre aspas: &quot;&quot;. “caracteres são entre aspas” aeiou #&gt; Error in eval(expr, envir, enclos): object &#39;aeiou&#39; not found &quot;aeiou&quot; #&gt; [1] &quot;aeiou&quot; 5.2.3 Funções matemáticas internas Existem diversas funções internas do R que permitem, por exemplo, sortear números aleatóriamente, arrendondar números, calcular o fatorial, calcular o seno, cosseno de um ângulo e etc. A sintaxe para chamar uma função no R é: funcão(argumento) Por exemplo: # funções trigonométricas sin(pi/6) #&gt; [1] 0.5 cos(pi) #&gt; [1] -1 # raiz quadrada sqrt(100) #&gt; [1] 10 # exponencial exp(1) #&gt; [1] 2.718282 # fatorial factorial(4) #&gt; [1] 24 No R você verá que parênteses são frequentemente utilizados. Eles são sempre associados à funções. Qualquer palavra antecedendo um parênteses é uma função. Para ver a lista completa de funções trigonométricas: ?&quot;Trig&quot; 5.2.4 Valores numéricos especiais Um caso particular sobre operação aritméticas no R, são os valores numéricos Infe NaN que resultam de operações como: 2/0 #&gt; [1] Inf -12/0 #&gt; [1] -Inf exp(-Inf) #&gt; [1] 0 log(0) #&gt; [1] -Inf 0/Inf #&gt; [1] 0 (0:3)^Inf #&gt; [1] 0 1 Inf Inf log(-0.5) #&gt; Warning in log(-0.5): NaNs produced #&gt; [1] NaN sqrt(-1) #&gt; Warning in sqrt(-1): NaNs produced #&gt; [1] NaN 0/0 #&gt; [1] NaN Inf-Inf #&gt; [1] NaN Inf/Inf #&gt; [1] NaN mean(c(NA, NA), na.rm = TRUE) #&gt; [1] NaN NaN é a abreviação para Not a Number. Geralmente surge quando um cálculo não tem sentido matemático ou não pode ser propriamente realizado. A demonstração das diferentes formas de se obter essas constantes especiais é importante para entender a origem delas durante a execução de um script mais extenso. Outra constante especial do R é o NA (Not Available) que representa valor faltante, um problema comum em análise de dados. Qualquer operação envolvendo NA resultará em NA (Tabela 1). Table 5.1: Tabela 1. Operações com NA. operação resultado NA + 5 NA sqrt(NA) NA NA^2 NA NA/NaN NA 5.2.5 Notação científica e número de dígitos Na maioria das vezes precisamos trabalhar com números grandes e consequentemente acabamos usando uma notação científica ou exponencial. No R há diferentes formas de representar números com expoentes: 1.2e-6 #&gt; [1] 1.2e-06 # expressões equivalentes 1.2E6; 1.2*10^6 #&gt; [1] 1200000 #&gt; [1] 1200000 Os resultados dos cálculos no R são mostrados com 7 dígitos significativos, o que pode ser verificado pela getOptions(). É possível mudar para n dígitos usando a função options(), conforme exemplo abaixo. # opção de dígitos padrão getOption(&quot;digits&quot;) #&gt; [1] 7 exp(1) #&gt; [1] 2.718282 # alterando para 14 options(digits = 14) exp(1) #&gt; [1] 2.718281828459 getOption(&quot;digits&quot;) #&gt; [1] 14 # redefinindo para o número de casas decimais padrão options(digits = 7) getOption(&quot;digits&quot;) #&gt; [1] 7 "],
["variaveis.html", "5.3 Variáveis", " 5.3 Variáveis 5.3.1 Formas de atribuição 5.3.1.1 Variável recebe valor Até agora nós usamos expressões para fazer uma operação e obter um resultado. O termo &quot;expressão&quot; significa uma sentença de código que pode ser executada. Se a avaliação de uma expressão é salva usando o operador &lt;-, esta combinação é chamada &quot;atribuição&quot;. O resultado da &quot;atribuição&quot; é armazenado em uma variável e pode ser utilizado posteriormente. Então uma variável é um nome usado para guardar os dados. variavel &lt;- valor p &lt;- 1013 # para mostrar a variável digite o nome da variável p #&gt; [1] 1013 # ou use a função print() print(p) #&gt; [1] 1013 O R diferencia letras maiúsculas de minúsculas. Portanto p e P são variáveis diferentes. p #&gt; [1] 1013 P #&gt; Error in eval(expr, envir, enclos): object &#39;P&#39; not found Como criamos apenas a variável p, P não foi encontrada. A variável p pode ser utilizado para criar outras variáveis. p_pa &lt;- p * 100 # pressão em Pascal p_pa #&gt; [1] 101300 A seta de atribuição pode ser usada em qualquer sentido. Parênteses, além de estarem sempre acompanhando uma função, também são usados para indicar a prioridade dos cálculos. 7/3 + 0.6 -&gt; y1 y1 #&gt; [1] 2.933333 7/(3 + 0.6) -&gt; y2 y2 #&gt; [1] 1.944444 Os espaços em torno do símbolo de atribuição (&lt;-) não são obrigatórios mas eles ajudam na legibilidade do código. x &lt;- 1 x &lt; -1 # atribuição ou menor que? x&lt;-1 Vamos criar uma variável chamada ndias3 que recebe o nº de dias no mês de Março e ndias4 que recebe o nº de dias no mês de Abril. nd3 &lt;- 31 nd4 &lt;- 30 O total de dias nos meses de março e abril será armazenado na variável totdias: totd &lt;- nd3 + nd4 totd #&gt; [1] 61 A atribuição de um mesmo valor para diferentes variáveis pode ser feita da seguinte forma: # número de dias em cada mês jan &lt;- mar &lt;- mai &lt;- jul &lt;- ago &lt;- out &lt;- dez &lt;- 31 abr &lt;- jun &lt;- set &lt;- nov &lt;- 30 fev &lt;- 28 # verificação jan; jul #&gt; [1] 31 #&gt; [1] 31 jun; set #&gt; [1] 30 #&gt; [1] 30 fev #&gt; [1] 28 Nós estamos definindo a variável, digitando o nome dela na linha de comando e teclando enter para ver o resultado. Há uma forma mais prática de fazer isso e mostrar o resultado cercando a atribuição por parênteses: # ao invés de # tar &lt;- 20 # tar # é mais prático (tar &lt;- 20) #&gt; [1] 20 Se desejamos calcular e já visualizar o valor da pressão de vapor de saturação obtida com a equação de Tetens, podemos fazer: (es &lt;- 0.611 * exp((17.269 * tar)/(tar + 237.3))) #&gt; [1] 2.338865 Quando usamos a mesma variável numa sequência de atribuições o seu valor é sobrescrito. Portanto não é bom usar nomes que já foram usados antes, exceto se a intenção for realmente essa. Para saber os nomes das variáveis já usados use a função ls()1 para verificar as variáveis existentes: ls() #&gt; [1] &quot;abr&quot; &quot;ago&quot; &quot;dez&quot; &quot;es&quot; &quot;fev&quot; &quot;jan&quot; #&gt; [7] &quot;jul&quot; &quot;jun&quot; &quot;mai&quot; &quot;mar&quot; &quot;nd3&quot; &quot;nd4&quot; #&gt; [13] &quot;nov&quot; &quot;oper_nas&quot; &quot;out&quot; &quot;p&quot; &quot;pcks&quot; &quot;p_pa&quot; #&gt; [19] &quot;rblue&quot; &quot;set&quot; &quot;tar&quot; &quot;totd&quot; &quot;y1&quot; &quot;y2&quot; totd &lt;- jan*7; totd &lt;- totd + fev; totd &lt;- totd + 4*abr totd #&gt; [1] 365 5.3.1.2 Atribuição com a função assign() Outra forma de atribuição é através da função assign(): es #&gt; [1] 2.338865 assign(x = &quot;es_hpa&quot;, value = es/10) es_hpa #&gt; [1] 0.2338865 # usando função assign sem nome dos parâmetros assign(&quot;u&quot;, 2.5) u #&gt; [1] 2.5 Um exemplo mais elaborado de uso da função assign() para criar várias variáveis pode ser visto aqui. 5.3.2 Removendo variáveis Para remover variáveis usa-se a função rm(). # lista de variáveis existentes ls() #&gt; [1] &quot;abr&quot; &quot;ago&quot; &quot;dez&quot; &quot;es&quot; &quot;es_hpa&quot; &quot;fev&quot; #&gt; [7] &quot;jan&quot; &quot;jul&quot; &quot;jun&quot; &quot;mai&quot; &quot;mar&quot; &quot;nd3&quot; #&gt; [13] &quot;nd4&quot; &quot;nov&quot; &quot;oper_nas&quot; &quot;out&quot; &quot;p&quot; &quot;pcks&quot; #&gt; [19] &quot;p_pa&quot; &quot;rblue&quot; &quot;set&quot; &quot;tar&quot; &quot;totd&quot; &quot;u&quot; #&gt; [25] &quot;y1&quot; &quot;y2&quot; Vamos remover a variável u criada previamente e ver a lista de objetos no espaço de trabalho. rm(u) # lista de variáveis existentes, sem u ls() #&gt; [1] &quot;abr&quot; &quot;ago&quot; &quot;dez&quot; &quot;es&quot; &quot;es_hpa&quot; &quot;fev&quot; #&gt; [7] &quot;jan&quot; &quot;jul&quot; &quot;jun&quot; &quot;mai&quot; &quot;mar&quot; &quot;nd3&quot; #&gt; [13] &quot;nd4&quot; &quot;nov&quot; &quot;oper_nas&quot; &quot;out&quot; &quot;p&quot; &quot;pcks&quot; #&gt; [19] &quot;p_pa&quot; &quot;rblue&quot; &quot;set&quot; &quot;tar&quot; &quot;totd&quot; &quot;y1&quot; #&gt; [25] &quot;y2&quot; Podemos remover mais de uma variável ao mesmo tempo. rm(es_hpa, es, tar, y1, y2) # lista de variáveis existentes, sem es_hpa, es, tar, y1, y2 ls() #&gt; [1] &quot;abr&quot; &quot;ago&quot; &quot;dez&quot; &quot;fev&quot; &quot;jan&quot; &quot;jul&quot; #&gt; [7] &quot;jun&quot; &quot;mai&quot; &quot;mar&quot; &quot;nd3&quot; &quot;nd4&quot; &quot;nov&quot; #&gt; [13] &quot;oper_nas&quot; &quot;out&quot; &quot;p&quot; &quot;pcks&quot; &quot;p_pa&quot; &quot;rblue&quot; #&gt; [19] &quot;set&quot; &quot;totd&quot; Para remover todas variáveis do espaço de trabalho (use com cautela): # apagando tudo rm(list = ls()) ls() #&gt; character(0) 5.3.3 Nomeando variáveis É preciso ter cuidado ao nomear variáveis no R porque existem algumas regras: não iniciar com um número e não conter espaços 1oAno &lt;- 1990 raizDe10 &lt;- srt(2) variavel teste &lt;- 67 # nomes alternativos para as variaveis ano1 &lt;- 1990 variavel_teste &lt;- 67 variavel.teste &lt;- 68 não conter símbolos especiais: ^, !, $, @, +, -, /, ou * dia-1 &lt;- 2 #&gt; Error in dia - 1 &lt;- 2: object &#39;dia&#39; not found # alternativa dia_1 &lt;- 2 evitar o uso de nomes usados em objetos do sistema (funções internas do R ou constantes como o número \\(\\pi\\)): c q s t C D F I T diff exp log mean pi range rank var FALSE Inf NA NaN NULL TRUE break else for function if in next repeat while variáveis com acento são permitidas mas não recomendadas. verão &lt;- &quot;DJF&quot; verão #&gt; [1] &quot;DJF&quot; Há limitações de interpretação do R para caracteres latinos como cedilha e acentos. Por isso não recomenda-se o uso destes caracteres para nomear variáveis. Uma boa prática de programação é dar nomes informativos às variáveis para maior legibilidade do código. Uma boa referência para isso é a seção Sintaxe do Guia de estilo tidyverse (ou universo arrumado). Apesar do ganho de legibilidade do código com a aplicação das regras de formatação de código do tidyverse é difícil de lembrar de todas elas. Mas este não é mais um problema, pois o pacote styler fornece funções para estilizar o seu código padrão tidyverse. install.packages(&quot;styler&quot;) library(styler) As funções são acessíveis Através do menu Addins do RStudio e incluem as opções de: estilizar um arquivo e uma região destacada do código. Essa lista de variáveis também é mostrada no painel Environment do RStudio (canto direito superior, aba Environment).↩ "],
["exercicios.html", "5.4 Exercícios", " 5.4 Exercícios Execute as seguintes expressões no R mostrando os resultados obtidos. 1 + 1 100:130 5 - +1 3 % 5 2 * 3 4 - 1 6 / (4 - 1) Utilize uma expressão para cada item. Escolha um número e some 3 a ele. Multiplique o resultado por 2. Subtraia 10 da resposta. Divida o que foi obtido por 4. Calcule \\(\\sqrt{16}\\), \\({16^{0.5}}^{3}\\), \\({(16^{0.5})}^{3}\\) e \\(4^{\\frac{3}{2}}\\). Teste as expressões log10(1000), log(1000), exp(log(1000)). Depois teste a expressão log2(64). Verifique se você entendeu as diferentes funções logarítmicas. Defina as variáveis abaixo tomando cuidados ao nomear as variáveis, conforme visto em sala de aula. Mostre os valores para as seguintes constantes: Velocidade da luz: \\(\\nu = 2.998 \\times 10^{8} \\left[m \\, s^{-1}\\right]\\) Carga elementar ou eletrônica: \\(e = 1.602 \\times 10^{-19} \\left[C\\right]\\) Permissividade do vácuo: \\(\\epsilon_{0} = 8.85 \\times 10^{-12} \\left[C^{2} \\, N^{-1} \\, m^{2}\\right]\\) Constante de Planck: \\(h=6.626 \\times 10^{-34} \\left[J \\, s\\right]\\) Constante de Stefan Boltzman: \\(\\sigma = 5.67 \\times 10^{-8} \\left[W \\, m^{-2} \\, K^{-4}\\right]\\) Constante solar: \\(S_{0} = 1380 \\left[W \\, m^{-2}\\right]\\) Constante de Avogadro: \\(N_{A} = 6.022 \\times 10^{23} \\left[mol^{-1}\\right]\\) Constante dos gases para o ar seco: \\(R_{d} = 287.04 \\left[J \\, K^{-1} \\, kg^{-1}\\right]\\) Constante dos gases ideais para o vapor: \\(R_{w} = 461.5 \\left[J \\, K^{-1} \\, kg^{-1}\\right]\\) Densidade do ar seco para CNTP (à 0 ° C em 1000 mb): \\(\\rho=1.2754 \\left[kg \\, m^{-3}\\right]\\) Pressão média ao nível médio do mar para atmosfera padrão: \\(P_{0}=1013.25 \\left[mb\\right]\\) Temperatura ao nível médio do mar para atmosfera padrão: \\(T_{0}=288.15 \\left[K\\right]\\) Calor latente de vaporização ou condensação (à 0 °C): \\(\\lambda_{v} = 2.501 \\times 10^{6}\\left[J \\, kg^{-1}\\right]\\) Calor latente de fusão (à 0 °C): \\(\\lambda_{f} = 0.334 \\times 10^{6}\\left[J \\, kg^{-1}\\right]\\) Massa molecular da água: \\(M_w = 18.016 \\left[g \\, mol^{-1}\\right]\\) Peso molecular do ar: \\(M_{ar} = 28.96 \\left[g \\, mol^{-1}\\right]\\) Raio da terra: \\(r = 6.37 \\times 10^{6} \\left[m\\right]\\) Velocidade angular da Terra: \\(\\Omega=7.29 \\times 10^{-5} \\left[rad \\, s^{-1}\\right]\\) Como você pode fazer para que a constante pi seja mostrada com 20 dígitos? (b) Como voltar a trabalhar a com 7 dígitos novamente? c. Mostre o número neperiano com 7 dígitos. Determine a temperatura de búlbo úmido (\\(T_{w}\\)) usando a expressão empírica (Stull, 2011) abaixo. Salve os resultados em variáveis diferentes. Para uma temperatura do ar (\\(T\\)) de 20°C e Umidade relativa (\\(UR\\)) de 70%, qual o valor de Tw? Defina variáveis para os valores \\(T\\) e (\\(UR\\)) e use-as na equação de \\(T_{w}\\). \\[ \\begin{aligned} T_{w}=T\\cdot atan\\left [ 0.151977\\cdot \\left ( UR+8.313659 \\right )^{1/2} \\right ]+ \\\\ atan\\left (T+UR \\right )-\\\\ atan\\left ( UR-1.676331 \\right )+\\\\ 0.00391838\\left ( UR \\right )^{3/2}\\cdot atan\\left ( 0.023101\\cdot UR \\right )-\\\\ 4.686035 \\end{aligned} \\] Determine os valores de umidade do solo: no potencial hídrico de 10kPa (\\(\\theta_{10kPa}\\)) na capacidade de campo (\\(\\theta_{33kPa}\\)) no ponto de murcha permanente (\\(\\theta_{1500kPa}\\)) utilizando o conjunto de equações de pedotransferência abaixo (Tomasela et al. 2003): Considere \\(SI = 16.29\\) (%), \\(CL = 49.25\\) (%), \\(Db = 1.25\\) (\\(g \\, cm^{-3}\\)), \\(Me = 25\\) (%), onde \\(SI\\) é a porcentagem de silte no solo, \\(CL\\) é a porcentagem de argila, \\(Db\\) é a densidade do solo e \\(Me\\) é a umidade equivalente em %. Arredonde para 2 casas decimais os resultados da questão 8. Dica ver ?round. Instale a última versão do R no (seu) computador usado para resolução desta lista. Crie um script chamado solucao-q10-NomeDoAluno.R contendo os códigos gerados para solução das questões 7 e 8. Faça as seguintes alterações no código do script: no código da questão 8, utilize a temperatura do ar (\\(T\\)) de 30°C e Umidade relativa (\\(UR\\)) de 30% para calcular \\(Tw\\). no código da questão 9, considere \\(SI = 13\\) (%), \\(CL = 37\\) (%), \\(Db = 1.3\\) (\\(g \\, cm^{-3}\\)), \\(Me = 21\\) (%) para recalcular \\(\\theta_{10kPa}\\), \\(\\theta_{33kPa}\\) e \\(\\theta_{1500kPa}\\). após os códigos usados para resolver as questões 8 e 9, adicione uma nova linha com a expressão sessionInfo(). Finalmente rode o script usando o R no modo não iterativo. Anexe o arquivo de saída solucao-q10-NomeDoAluno.Rout como resposta para este problema. Instruções para entrega da resolução da lista de exercícios. A resolução da lista deve conter um único arquivo compactado nomeado segundo o padrão lista1-adar-NomedoAluno.zip. O arquivo compactado deve incluir pelo menos 3 arquivos: solucao-q10-NomeDoAluno.R: um script com os códigos usados para resolver a questão 10. solucao-q10-NomeDoAluno.Rout um arquivo texto de saída gerado (automaticamente) pelo R quando usado no modo não iterativo (Batch). Também faz parte da resolução da questão 10. lista1-adar-NomedoAluno.Rmd: arquivo Rmarkdown gerado no RStudio (File &gt; New File &gt; R Notebook) e editado de forma que contenha o texto e o código (chuncks) necessários para resolução das questões 1 a 9. Sempre procure criar variáveis par resolução das questões. Utilize nomes contextualizados e intuitivos. Siga as boas práticas recomendadas no material e em laboratório para nomear as variáveis. (Opcional) lista1-adar-NomedoAluno.html arquivo html gerado pelo RStudio (botão knit na aba do painel do editor) a partir do arquivo lista1-adar-NomedoAluno.Rmd. "]
]
